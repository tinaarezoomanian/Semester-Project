/***************************************************************
* file: PlayerMovement.java
* author: Kenneth Chau, Tina Arezoomanians, Kelly Lwin
* class: CS 4450.01 (S25-Regular) Computer Graphics
*
* assignment: Final Program Checkpoint 1
* date last modified: 3/27/2025
*
* purpose: The program displays a cube in 3D space with each face colored differently
* note: The program contains code that is assisted but not generated by AI.
****************************************************************/

package Program1;

import org.lwjgl.input.Keyboard;
import org.lwjgl.util.vector.Vector3f;

public class PlayerMovement {
    public static Vector3f getMovementDelta(float movementSpeed, float cameraYaw) {
        // Convert yaw to radians.
        float yawRad = (float) Math.toRadians(cameraYaw);

        // Calculate forward and right vectors (assuming movement only in the horizontal plane).
        float forwardX = (float) Math.sin(yawRad);
        float forwardZ = (float) -Math.cos(yawRad);
        float rightX = (float) Math.cos(yawRad);
        float rightZ = (float) Math.sin(yawRad);

        // Initialize movement delta.
        Vector3f delta = new Vector3f(0, 0, 0);

        // Forward movement (W or up arrow)
        if (Keyboard.isKeyDown(Keyboard.KEY_W) || Keyboard.isKeyDown(Keyboard.KEY_UP)) {
            delta.x += forwardX * movementSpeed;
            delta.z += forwardZ * movementSpeed;
        }

        // Backward movement (S or down arrow)
        if (Keyboard.isKeyDown(Keyboard.KEY_S) || Keyboard.isKeyDown(Keyboard.KEY_DOWN)) {
            delta.x -= forwardX * movementSpeed;
            delta.z -= forwardZ * movementSpeed;
        }

        // Strafe left (A or left arrow)
        if (Keyboard.isKeyDown(Keyboard.KEY_A) || Keyboard.isKeyDown(Keyboard.KEY_LEFT)) {
            delta.x -= rightX * movementSpeed;
            delta.z -= rightZ * movementSpeed;
        }

        // Strafe right (D or right arrow)
        if (Keyboard.isKeyDown(Keyboard.KEY_D) || Keyboard.isKeyDown(Keyboard.KEY_RIGHT)) {
            delta.x += rightX * movementSpeed;
            delta.z += rightZ * movementSpeed;
        }

        // Move upward (space bar)
        if (Keyboard.isKeyDown(Keyboard.KEY_SPACE)) {
            delta.y += movementSpeed;
        }

        // Move downward (left shift)
        if (Keyboard.isKeyDown(Keyboard.KEY_LSHIFT)) {
            delta.y -= movementSpeed;
        }

        return delta;
    } 
}