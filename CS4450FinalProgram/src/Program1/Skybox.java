/***************************************************************
* file: Skybox.java
* author: Kenneth Chau, Tina Arezoomanians, Kelly Lwin
* class: CS 4450.01 (S25-Regular) Computer Graphics
*
* assignment: Final Program
* date last modified: 05/04/2025
* 
* purpose: The program generates day and night sky-box texture in the scene.
* note: The program contains code that is assisted but not generated by AI.
****************************************************************/
package Program1;

import org.lwjgl.opengl.GL11;

public class Skybox {
    private static int[] dayTextures = new int[6];
    private static int[] nightTextures = new int[6];
    private static boolean isDay = true;

    public static void initSkybox() {
        int dayTex = MyTextureLoader.loadTexture("/textures/daysky.png");
        int nightTex = MyTextureLoader.loadTexture("/textures/nightsky.png");

        for (int i = 0; i < 6; i++) {
            dayTextures[i] = dayTex;
            nightTextures[i] = nightTex;
        }
    }

    public static void setDay(boolean day) {
        isDay = day;
    }

    public static void render(float x, float y, float z) {
        int[] tex = isDay ? dayTextures : nightTextures;
        float s = 500f;

        GL11.glDisable(GL11.GL_LIGHTING);
        GL11.glDisable(GL11.GL_DEPTH_TEST);
        GL11.glPushMatrix();
        GL11.glTranslatef(x, y, z);

        drawFace(tex[0],  s, -s, -s,  s,  s, -s,  s,  s,  s,  s, -s,  s); // Right
        drawFace(tex[1], -s, -s,  s, -s,  s,  s, -s,  s, -s, -s, -s, -s); // Left
        drawFace(tex[2], -s,  s, -s,  s,  s, -s,  s,  s,  s, -s,  s,  s); // Top
        drawFace(tex[3], -s, -s,  s,  s, -s,  s,  s, -s, -s, -s, -s, -s); // Bottom
        drawFace(tex[4], -s, -s, -s,  s, -s, -s,  s,  s, -s, -s,  s, -s); // Front
        drawFace(tex[5],  s, -s,  s, -s, -s,  s, -s,  s,  s,  s,  s,  s); // Back

        GL11.glPopMatrix();
        GL11.glEnable(GL11.GL_DEPTH_TEST);
        GL11.glEnable(GL11.GL_LIGHTING);
    }

    private static void drawFace(int textureID,
                                 float x0, float y0, float z0,
                                 float x1, float y1, float z1,
                                 float x2, float y2, float z2,
                                 float x3, float y3, float z3) {
        GL11.glBindTexture(GL11.GL_TEXTURE_2D, textureID);
        GL11.glBegin(GL11.GL_QUADS);
        GL11.glTexCoord2f(0, 0); GL11.glVertex3f(x0, y0, z0);
        GL11.glTexCoord2f(1, 0); GL11.glVertex3f(x1, y1, z1);
        GL11.glTexCoord2f(1, 1); GL11.glVertex3f(x2, y2, z2);
        GL11.glTexCoord2f(0, 1); GL11.glVertex3f(x3, y3, z3);
        GL11.glEnd();
    }
}
