/***************************************************************
* file: Basic.java
* author: Kenneth Chau, Tina Arezoomanians, Kelly Lwin
* class: CS 4450.01 (S25-Regular) Computer Graphics
*
* assignment: Final Program Checkpoint 1
* date last modified: 3/27/2025
*
* purpose: The program displays a cube in 3D space with each face colored differently.
* note: The program contains code that is assisted but not generated by AI.
****************************************************************/

package Program1;

import org.lwjgl.input.Mouse;
import org.lwjgl.input.Keyboard;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.lwjgl.opengl.GL11;
import org.lwjgl.util.glu.GLU;

public class Basic {

    // instance variables
    private static final int WINDOW_WIDTH = 640;
    private static final int WINDOW_HEIGHT = 480;
    private static final int FRAME_RATE = 60;
    private static final String WINDOW_TITLE = "Final Program Checkpoint 1";
    
    // camera instance
    private Camera camera;
    
    // method: start
    // purpose: Sets up the graphics and begins rendering.
    public void start() {
        try {
            createWindow();
            initGL();
            // initialize camera
            camera = new Camera(0.0f, 0.0f, 5.0f);
            render();
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
    }

    // method: createWindow
    // purpose: Creates and initializes an OpenGL window.
    private void createWindow() throws Exception {
        Display.setFullscreen(false);
        Display.setDisplayMode(new DisplayMode(WINDOW_WIDTH, WINDOW_HEIGHT));
        
        // center the window
        DisplayMode desktop = Display.getDesktopDisplayMode();
        int x = (desktop.getWidth() - WINDOW_WIDTH) / 2;
        int y = (desktop.getHeight() - WINDOW_HEIGHT) / 2;
        Display.setLocation(x, y);

        Display.setTitle(WINDOW_TITLE);
        Display.create();

        // capture the mouse for first-person look control
        Mouse.setGrabbed(true);
    }

    // method: initGL
    // purpose: Initializes OpenGL settings and sets the background color.
    private void initGL() {
        GL11.glEnable(GL11.GL_DEPTH_TEST);
        GL11.glClearColor(0f, 0f, 0f, 0f);

        GL11.glMatrixMode(GL11.GL_PROJECTION);
        GL11.glLoadIdentity();
        GLU.gluPerspective(70.0f, (float) WINDOW_WIDTH / WINDOW_HEIGHT, 0.1f, 1000f);
        GL11.glMatrixMode(GL11.GL_MODELVIEW);
        GL11.glHint(GL11.GL_PERSPECTIVE_CORRECTION_HINT, GL11.GL_NICEST);
    }

    // method: render
    // purpose: Main rendering loop, handles user input and draws graphics.
    private void render() {
        while (!Display.isCloseRequested() && !Keyboard.isKeyDown(Keyboard.KEY_ESCAPE)) {
            // update camera (processes both mouse and keyboard input)
            camera.update();

            // clear the buffers and reset the modelview matrix
            GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
            GL11.glLoadIdentity();

            // apply the camera transformation
            camera.applyView();

            // draw the cube from the Cube class
            Cube.drawCube();

            Display.update();
            Display.sync(FRAME_RATE);
        }
        Display.destroy();
    }

    // method: main
    // purpose: Creates an instance of Basic and starts program execution.
    public static void main(String[] args) {
        Basic basic = new Basic();
        basic.start();
    }
}